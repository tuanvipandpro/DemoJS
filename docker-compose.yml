version: '3.9'

services:
  # PostgreSQL Database vá»›i pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: insighttestai-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-insighttestai}
      POSTGRES_USER: ${POSTGRES_USER:-insight}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-insightp}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ${PGDATA_PATH:-./db/data}:/var/lib/postgresql/data
      - ./server/src/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - insighttestai-network
    restart: unless-stopped

  # InsightTestAI Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: insighttestai-server
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${SERVER_PORT:-3001}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-insighttestai}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - RAG_SERVICE_TYPE=${RAG_SERVICE_TYPE:-postgresql}
      - LLM_SERVICE_TYPE=${LLM_SERVICE_TYPE:-mock}
    ports:
      - "${SERVER_PORT:-3001}:3001"
    depends_on:
      - postgres
    networks:
      - insighttestai-network
    restart: unless-stopped
    volumes:
      - ./server:/app
      - /app/node_modules

  # InsightTestAI Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: insighttestai-client
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3001/api}
    ports:
      - "${CLIENT_PORT:-5173}:5173"
    depends_on:
      - server
    networks:
      - insighttestai-network
    restart: unless-stopped
    volumes:
      - ./client:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  insighttestai-network:
    driver: bridge