version: "3.9"

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres-vector-db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-insighttestai}
      POSTGRES_USER: ${DB_USER:-insight}
      POSTGRES_PASSWORD: ${DB_PASS:-insightp}
    ports:
      - "5432:5432"
    volumes:
      - "${PGDATA_PATH:-./db/data}:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - insighttestai-network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: insighttestai-backend
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3001}
      - HOST=${HOST:-0.0.0.0}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-insighttestai}
      - DB_USER=${DB_USER:-insight}
      - DB_PASS=${DB_PASS:-insightp}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173}
      - TRUST_PROXY=${TRUST_PROXY:-1}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - insighttestai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: insighttestai-frontend
    restart: always
    environment:
      - VITE_API_BASE=${VITE_API_BASE:-http://localhost:3001/api}
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - insighttestai-network
    volumes:
      - ./client:/app
      - /app/node_modules

networks:
  insighttestai-network:
    driver: bridge

volumes:
  postgres_data: